{"version":3,"file":"322.a786c734ead3e71f855f.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/middle/helpers/preventMessageInputBlur.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/ui/Checkbox.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/DropdownMenu.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/Menu.tsx","webpack://telegram-t/./src/components/ui/MenuItem.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/useFastClick.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInterval.ts","webpack://telegram-t/./src/hooks/useKeyboardListNavigation.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useVirtualBackdrop.ts","webpack://telegram-t/./src/util/captureEscKeyListener.ts","webpack://telegram-t/./src/util/captureKeyboardListeners.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/resetScroll.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './Avatar.scss';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'mini' | 'small' | 'small-mobile' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  loopIndefinitely?: boolean;\n  noPersonalPhoto?: boolean;\n  lastSyncTime?: number;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  loopIndefinitely,\n  lastSyncTime,\n  noPersonalPhoto,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  const isForum = chat?.isForum;\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const shouldLoadVideo = withVideo && photo?.isVideo;\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user && !noPersonalPhoto) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n      if (photo.isVideo && withVideo) {\n        videoHash = `videoAvatar${photo.id}?size=u`;\n      }\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  // `videoBlobUrl` can be taken from memory cache, so we need to check `shouldLoadVideo` again\n  const shouldPlayVideo = Boolean(videoBlobUrl && shouldLoadVideo);\n\n  const transitionClassNames = useMediaTransition(hasBlobUrl);\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const onlineTransitionClassNames = useMediaTransition(isOnline);\n  const onlineClassNamesPrefixed = useMemo(() => {\n    return onlineTransitionClassNames.split(' ').map((c) => (c === 'shown' ? 'online' : `online-${c}`)).join(' ');\n  }, [onlineTransitionClassNames]);\n\n  const handleVideoEnded = useCallback((e) => {\n    const video = e.currentTarget;\n    if (!videoBlobUrl) return;\n\n    if (loopIndefinitely) return;\n\n    videoLoopCountRef.current += 1;\n    if (videoLoopCountRef.current >= LOOP_COUNT) {\n      video.style.display = 'none';\n    }\n  }, [loopIndefinitely, videoBlobUrl]);\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-avatar-saved-messages',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isDeleted) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-avatar-deleted-account',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isReplies) {\n    content = (\n      <i\n        className={buildClassName(\n          cn.icon,\n          'icon',\n          'icon-reply-filled',\n        )}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <OptimizedVideo\n            canPlay\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media', 'poster')}\n            muted\n            loop={loopIndefinitely}\n            autoPlay\n            disablePictureInPicture\n            playsInline\n            onEnded={handleVideoEnded}\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isForum && 'forum',\n    onlineClassNamesPrefixed,\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  });\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import type React from '../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nexport function preventMessageInputBlur(e: React.MouseEvent<HTMLElement>, withBubbling = false) {\n  if (\n    IS_IOS\n    || !document.activeElement\n    || document.activeElement.id !== EDITABLE_INPUT_ID\n    || (!withBubbling && e.target !== e.currentTarget)\n  ) {\n    return;\n  }\n\n  e.preventDefault();\n}\n\nexport function preventMessageInputBlurWithBubbling(e: React.MouseEvent<HTMLElement>) {\n  preventMessageInputBlur(e, true);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport renderText from '../common/helpers/renderText';\n\nimport Spinner from './Spinner';\n\nimport './Checkbox.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: TeactNode;\n  subLabel?: string;\n  checked: boolean;\n  rightIcon?: string;\n  disabled?: boolean;\n  tabIndex?: number;\n  round?: boolean;\n  blocking?: boolean;\n  isLoading?: boolean;\n  withCheckedCallback?: boolean;\n  className?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n};\n\nconst Checkbox: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  subLabel,\n  checked,\n  tabIndex,\n  disabled,\n  round,\n  blocking,\n  isLoading,\n  className,\n  rightIcon,\n  onChange,\n  onCheck,\n  onClickLabel,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onCheck) {\n      onCheck(event.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  function handleClick(event: React.MouseEvent) {\n    if (event.target !== labelRef.current) {\n      onClickLabel?.(event, value);\n    }\n  }\n\n  function handleInputClick(event: React.MouseEvent) {\n    event.stopPropagation();\n  }\n\n  const labelClassName = buildClassName(\n    'Checkbox',\n    disabled && 'disabled',\n    round && 'round',\n    isLoading && 'loading',\n    blocking && 'blocking',\n    className,\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <label\n      className={labelClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={onClickLabel ? handleClick : undefined}\n      ref={labelRef}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        tabIndex={tabIndex}\n        onChange={handleChange}\n        onClick={onClickLabel ? handleInputClick : undefined}\n      />\n      <div className=\"Checkbox-main\">\n        <span className=\"label\" dir=\"auto\">\n          {typeof label === 'string' ? renderText(label) : label}\n          {rightIcon && <i className={`icon icon-${rightIcon} right-icon`} />}\n        </span>\n        {subLabel && <span className=\"subLabel\" dir=\"auto\">{renderText(subLabel)}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Checkbox);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, {\n  useState, useRef, useCallback, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport Menu from './Menu';\nimport Button from './Button';\n\nimport './DropdownMenu.scss';\n\ntype OwnProps = {\n  className?: string;\n  trigger?: FC<{ onTrigger: () => void; isOpen?: boolean }>;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  footer?: string;\n  forceOpen?: boolean;\n  onOpen?: NoneToVoidFunction;\n  onClose?: NoneToVoidFunction;\n  onHide?: NoneToVoidFunction;\n  onTransitionEnd?: NoneToVoidFunction;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst DropdownMenu: FC<OwnProps> = ({\n  trigger,\n  className,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  footer,\n  forceOpen,\n  onOpen,\n  onClose,\n  onTransitionEnd,\n  onMouseEnterBackdrop,\n  onHide,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n    if (isOpen) {\n      onClose?.();\n    } else {\n      onOpen?.();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\n    const menu = menuRef.current;\n\n    if (!isOpen || e.keyCode !== 40 || !menu) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(menu.children);\n\n    if (!focusedElement || elementChildren.indexOf(focusedElement) === -1) {\n      (elementChildren[0] as HTMLElement).focus();\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const triggerComponent: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    if (trigger) return trigger;\n\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [trigger]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`DropdownMenu ${className || ''}`}\n      onKeyDown={handleKeyDown}\n      onTransitionEnd={onTransitionEnd}\n    >\n      {triggerComponent({ onTrigger: toggleIsOpen, isOpen })}\n\n      <Menu\n        ref={menuRef}\n        containerRef={dropdownRef}\n        isOpen={isOpen || Boolean(forceOpen)}\n        className={className || ''}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        footer={footer}\n        autoClose\n        onClose={handleClose}\n        shouldSkipTransition={forceOpen}\n        onCloseAnimationEnd={onHide}\n        onMouseEnterBackdrop={onMouseEnterBackdrop}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import type { RefObject, UIEvent } from 'react';\nimport React, {\n  useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\n\nimport { LoadMoreDirection } from '../../types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../util/windowEnvironment';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useVirtualBackdrop from '../../hooks/useVirtualBackdrop';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Portal from './Portal';\n\nimport './Menu.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  containerRef?: RefObject<HTMLElement>;\n  isOpen: boolean;\n  id?: string;\n  className?: string;\n  bubbleClassName?: string;\n  style?: string;\n  bubbleStyle?: string;\n  ariaLabelledBy?: string;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  autoClose?: boolean;\n  shouldSkipTransition?: boolean;\n  footer?: string;\n  noCloseOnBackdrop?: boolean;\n  backdropExcludedSelector?: string;\n  noCompact?: boolean;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onCloseAnimationEnd?: () => void;\n  onClose: () => void;\n  onMouseEnter?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  withPortal?: boolean;\n  children: React.ReactNode;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Menu: FC<OwnProps> = ({\n  ref,\n  containerRef,\n  isOpen,\n  id,\n  className,\n  bubbleClassName,\n  style,\n  bubbleStyle,\n  ariaLabelledBy,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  autoClose = false,\n  footer,\n  noCloseOnBackdrop = false,\n  backdropExcludedSelector,\n  noCompact,\n  onCloseAnimationEnd,\n  onClose,\n  onMouseEnter,\n  onMouseLeave,\n  shouldSkipTransition,\n  withPortal,\n  onMouseEnterBackdrop,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let menuRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    menuRef = ref;\n  }\n  const backdropContainerRef = containerRef || menuRef;\n  const { isTouchScreen } = useAppLayout();\n\n  const {\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen,\n    onCloseAnimationEnd,\n    shouldSkipTransition,\n    undefined,\n    shouldSkipTransition,\n  );\n\n  useEffect(\n    () => (isOpen ? captureEscKeyListener(onClose) : undefined),\n    [isOpen, onClose],\n  );\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    if (isOpen || (!isOpen && prevIsOpen === true)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = useKeyboardListNavigation(menuRef, isOpen, autoClose ? onClose : undefined, undefined, true);\n\n  useVirtualBackdrop(\n    isOpen,\n    backdropContainerRef,\n    noCloseOnBackdrop ? undefined : onClose,\n    undefined,\n    backdropExcludedSelector,\n  );\n\n  const bubbleFullClassName = buildClassName(\n    'bubble menu-container custom-scroll',\n    positionY,\n    positionX,\n    footer && 'with-footer',\n    transitionClassNames,\n    bubbleClassName,\n  );\n\n  const transformOriginYStyle = transformOriginY !== undefined ? `${transformOriginY}px` : undefined;\n  const transformOriginXStyle = transformOriginX !== undefined ? `${transformOriginX}px` : undefined;\n\n  const menu = (\n    <div\n      id={id}\n      className={buildClassName(\n        'Menu no-selection',\n        !noCompact && !isTouchScreen && 'compact',\n        !IS_BACKDROP_BLUR_SUPPORTED && 'no-blur',\n        className,\n      )}\n      style={style}\n      aria-labelledby={ariaLabelledBy}\n      role={ariaLabelledBy ? 'menu' : undefined}\n      onKeyDown={isOpen ? handleKeyDown : undefined}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={isOpen ? onMouseLeave : undefined}\n    >\n      {isOpen && (\n        // This only prevents click events triggering on underlying elements\n        <div\n          className=\"backdrop\"\n          onMouseDown={preventMessageInputBlurWithBubbling}\n          onMouseEnter={onMouseEnterBackdrop}\n        />\n      )}\n      <div\n        role=\"presentation\"\n        ref={menuRef}\n        className={bubbleFullClassName}\n        style={buildStyle(\n          `transform-origin: ${transformOriginXStyle || positionX} ${transformOriginYStyle || positionY}`,\n          bubbleStyle,\n        )}\n        onClick={autoClose ? onClose : undefined}\n      >\n        {children}\n        {/* {footer && <div className=\"footer\">{footer}</div>} */}\n      </div>\n    </div>\n  );\n\n  if (withPortal) {\n    return <Portal>{menu}</Portal>;\n  }\n\n  return menu;\n};\n\nexport default memo(Menu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback } from '../../lib/teact/teact';\n\nimport { IS_TEST } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './MenuItem.scss';\n\nexport type MenuItemProps = {\n  icon?: string;\n  isCharIcon?: boolean;\n  customIcon?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n  onClick?: (e: React.SyntheticEvent<HTMLDivElement | HTMLAnchorElement>, arg?: number) => void;\n  clickArg?: number;\n  onContextMenu?: (e: React.UIEvent) => void;\n  href?: string;\n  download?: string;\n  disabled?: boolean;\n  destructive?: boolean;\n  ariaLabel?: string;\n  withWrap?: boolean;\n};\n\nconst MenuItem: FC<MenuItemProps> = (props) => {\n  const {\n    icon,\n    isCharIcon,\n    customIcon,\n    className,\n    children,\n    onClick,\n    href,\n    download,\n    disabled,\n    destructive,\n    ariaLabel,\n    withWrap,\n    onContextMenu,\n    clickArg,\n  } = props;\n\n  const lang = useLang();\n  const { isTouchScreen } = useAppLayout();\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  }, [clickArg, disabled, onClick]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode !== 13 && e.keyCode !== 32) {\n      return;\n    }\n\n    if (disabled || !onClick) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      return;\n    }\n\n    onClick(e, clickArg);\n  }, [clickArg, disabled, onClick]);\n\n  const fullClassName = buildClassName(\n    'MenuItem',\n    className,\n    disabled && 'disabled',\n    destructive && 'destructive',\n    !isTouchScreen && 'compact',\n    withWrap && 'wrap',\n  );\n\n  const content = (\n    <>\n      {!customIcon && icon && (\n        <i\n          className={isCharIcon ? 'icon icon-char' : `icon icon-${icon}`}\n          data-char={isCharIcon ? icon : undefined}\n        />\n      )}\n      {customIcon}\n      {children}\n    </>\n  );\n\n  if (href) {\n    return (\n      <a\n        tabIndex={0}\n        className={fullClassName}\n        href={href}\n        download={download}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        target={href.startsWith(window.location.origin) || IS_TEST ? '_self' : '_blank'}\n        rel=\"noopener noreferrer\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n        onClick={onClick}\n      >\n        {content}\n      </a>\n    );\n  }\n\n  return (\n    <div\n      role=\"menuitem\"\n      tabIndex={0}\n      className={fullClassName}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onContextMenu={onContextMenu}\n      aria-label={ariaLabel}\n      title={ariaLabel}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {content}\n    </div>\n  );\n};\n\nexport default MenuItem;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  }, [onEnter]);\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import type { GlobalState } from '../types';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { isChatBasicGroup } from '../helpers';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import type React from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../util/windowEnvironment';\n\ntype EventArg<E> = React.MouseEvent<E>;\ntype EventHandler<E> = (e: EventArg<E>) => void;\n\nexport function useFastClick<T extends HTMLDivElement | HTMLButtonElement>(callback?: EventHandler<T>) {\n  const wrapperHandler = callback ? (e: EventArg<T>) => {\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    callback(e);\n  } : undefined;\n\n  return IS_TOUCH_ENV\n    ? { handleClick: wrapperHandler }\n    : { handleMouseDown: wrapperHandler };\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const requestParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || requestParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    requestParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const viewportIds = viewportIdsRef.current;\n    const isOnTop = viewportIds && viewportIds[0] === listIds[0];\n    const currentMiddleId = !isOnTop && viewportIds ? viewportIds[Math.round(viewportIds.length / 2)] : undefined;\n    const defaultOffsetId = currentMiddleId && listIds.includes(currentMiddleId) ? currentMiddleId : listIds[0];\n    const { offsetId = defaultOffsetId, direction = LoadMoreDirection.Forwards } = requestParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    requestParamsRef.current = {};\n\n    if (!viewportIds || !areSortedArraysEqual(viewportIds, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  } else if (!listIds) {\n    viewportIdsRef.current = undefined;\n  }\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      if (!noScroll) {\n        requestParamsRef.current = { ...requestParamsRef.current, direction, offsetId };\n      }\n\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection >= 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { RefObject } from 'react';\nimport { useState, useCallback, useEffect } from '../lib/teact/teact';\n\nconst useKeyboardListNavigation = (\n  elementRef: RefObject<HTMLElement>,\n  isOpen: boolean,\n  onSelectWithEnter?: (index: number) => void,\n  itemSelector?: string,\n  noCaptureFocus?: boolean,\n) => {\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n\n  useEffect(() => {\n    setFocusedIndex(-1);\n\n    const element = elementRef.current;\n    if (isOpen && element && !noCaptureFocus) {\n      element.tabIndex = -1;\n      element.focus();\n    }\n  }, [elementRef, isOpen, noCaptureFocus]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<any>) => {\n    const element = elementRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    if (e.keyCode === 13 && onSelectWithEnter) {\n      onSelectWithEnter(focusedIndex);\n      return;\n    }\n\n    if (e.keyCode !== 38 && e.keyCode !== 40) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(itemSelector ? element.querySelectorAll(itemSelector) : element.children);\n\n    let newIndex = (focusedElement && elementChildren.indexOf(focusedElement)) || focusedIndex;\n\n    if (e.keyCode === 38 && newIndex > 0) {\n      newIndex--;\n    } else if (e.keyCode === 40 && newIndex < elementChildren.length - 1) {\n      newIndex++;\n    } else if (elementChildren.length === 1) {\n      newIndex = 0;\n    } else {\n      return;\n    }\n\n    const item = elementChildren[newIndex] as HTMLElement;\n    if (item) {\n      setFocusedIndex(newIndex);\n      item.focus();\n    }\n  }, [elementRef, onSelectWithEnter, itemSelector, focusedIndex]);\n\n  return handleKeyDown;\n};\n\nexport default useKeyboardListNavigation;\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nconst BACKDROP_CLASSNAME = 'backdrop';\n\n// This effect implements closing menus by clicking outside of them\n// without adding extra elements to the DOM\nexport default function useVirtualBackdrop(\n  isOpen: boolean,\n  menuRef: RefObject<HTMLElement>,\n  onClose?: () => void | undefined,\n  ignoreRightClick?: boolean,\n  excludedClosestSelector?: string,\n) {\n  useEffect(() => {\n    if (!isOpen || !onClose) {\n      return undefined;\n    }\n\n    const handleEvent = (e: MouseEvent) => {\n      const menu = menuRef.current;\n      const target = e.target as HTMLElement | null;\n      if (!menu || !target || (ignoreRightClick && e.button === 2)) {\n        return;\n      }\n\n      if ((\n        !menu.contains(e.target as Node | null)\n        || target.classList.contains(BACKDROP_CLASSNAME)\n      ) && !(excludedClosestSelector && (\n        target.matches(excludedClosestSelector) || target.closest(excludedClosestSelector)\n      ))) {\n        e.preventDefault();\n        e.stopPropagation();\n        onClose?.();\n      }\n    };\n\n    document.addEventListener('mousedown', handleEvent);\n\n    return () => {\n      document.removeEventListener('mousedown', handleEvent);\n    };\n  }, [excludedClosestSelector, ignoreRightClick, isOpen, menuRef, onClose]);\n}\n","import captureKeyboardListener from './captureKeyboardListeners';\n\ntype IHandlerFunction = () => void;\n\nexport default function captureEscKeyListener(handler: IHandlerFunction) {\n  return captureKeyboardListener({ onEsc: handler });\n}\n","type HandlerName =\n  'onEnter'\n  | 'onBackspace'\n  | 'onDelete'\n  | 'onEsc'\n  | 'onUp'\n  | 'onDown'\n  | 'onLeft'\n  | 'onRight'\n  | 'onTab';\ntype Handler = (e: KeyboardEvent) => void | boolean;\ntype CaptureOptions = Partial<Record<HandlerName, Handler>>;\n\nconst keyToHandlerName: Record<string, HandlerName> = {\n  Enter: 'onEnter',\n  Backspace: 'onBackspace',\n  Delete: 'onDelete',\n  Esc: 'onEsc',\n  Escape: 'onEsc',\n  ArrowUp: 'onUp',\n  ArrowDown: 'onDown',\n  ArrowLeft: 'onLeft',\n  ArrowRight: 'onRight',\n  Tab: 'onTab',\n};\n\nconst handlers: Record<HandlerName, Handler[]> = {\n  onEnter: [],\n  onDelete: [],\n  onBackspace: [],\n  onEsc: [],\n  onUp: [],\n  onDown: [],\n  onLeft: [],\n  onRight: [],\n  onTab: [],\n};\n\nexport default function captureKeyboardListeners(options: CaptureOptions) {\n  if (!hasActiveHandlers()) {\n    document.addEventListener('keydown', handleKeyDown, true);\n  }\n\n  (Object.keys(options) as Array<HandlerName>).forEach((handlerName) => {\n    const handler = options[handlerName];\n    if (!handler) {\n      return;\n    }\n\n    const currentEventHandlers = handlers[handlerName];\n    if (currentEventHandlers) {\n      currentEventHandlers.push(handler);\n    }\n  });\n\n  return () => {\n    releaseKeyboardListener(options);\n  };\n}\n\nfunction hasActiveHandlers() {\n  return Object.values(handlers).some((keyHandlers) => Boolean(keyHandlers.length));\n}\n\nfunction handleKeyDown(e: KeyboardEvent) {\n  const handlerName = keyToHandlerName[e.key];\n  if (!handlerName) {\n    return;\n  }\n\n  const { length } = handlers[handlerName];\n  if (!length) {\n    return;\n  }\n\n  for (let i = length - 1; i >= 0; i--) {\n    const handler = handlers[handlerName][i]!;\n    if (handler(e) !== false) {\n      e.stopPropagation();\n      break;\n    }\n  }\n}\n\nfunction releaseKeyboardListener(options: CaptureOptions) {\n  (Object.keys(options) as Array<HandlerName>).forEach((handlerName) => {\n    const handler = options[handlerName];\n    const currentEventHandlers = handlers[handlerName];\n    if (currentEventHandlers) {\n      const index = currentEventHandlers.findIndex((cb) => cb === handler);\n      if (index !== -1) {\n        currentEventHandlers.splice(index, 1);\n      }\n    }\n  });\n\n  if (!hasActiveHandlers()) {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  }\n}\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n"],"names":["cn","createClassNameBuilder","media","icon","memo","_ref","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","loopIndefinitely","lastSyncTime","noPersonalPhoto","onClick","ref","useRef","videoLoopCountRef","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","isForum","imageHash","videoHash","shouldLoadVideo","isVideo","shouldFetchBig","getChatAvatarHash","undefined","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useMediaTransition","isOnline","isUserOnline","onlineTransitionClassNames","onlineClassNamesPrefixed","useMemo","split","map","c","join","handleVideoEnded","useCallback","e","video","currentTarget","current","style","display","lang","useLang","content","author","getUserFullName","getChatTitle","React","buildClassName","role","src","alt","decoding","OptimizedVideo","canPlay","muted","loop","autoPlay","disablePictureInPicture","playsInline","onEnded","userFullName","getFirstLetters","title","isUserId","fullClassName","getUserColorKey","hasMedia","handleClick","handleMouseDown","useFastClick","senderId","IS_TEST","onMouseDown","renderText","preventMessageInputBlur","withBubbling","arguments","length","IS_IOS","document","activeElement","EDITABLE_INPUT_ID","target","preventDefault","preventMessageInputBlurWithBubbling","withGlobal","global","_ref2","userId","selectCurrentChat","selectUser","contactName","getUserFirstOrLastName","isOpen","onClose","deleteChatMember","getActions","handleDeleteChatMember","chatId","ConfirmDialog","textParts","confirmLabel","confirmHandler","confirmIsDestructive","name","value","label","subLabel","checked","tabIndex","disabled","round","blocking","isLoading","rightIcon","onChange","onCheck","onClickLabel","labelRef","handleChange","event","labelClassName","dir","isRtl","type","stopPropagation","Spinner","onCloseAnimationEnd","header","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","textPart","onKeyDown","Button","isText","color","trigger","transformOriginX","transformOriginY","positionX","positionY","footer","forceOpen","onOpen","onTransitionEnd","onMouseEnterBackdrop","onHide","menuRef","dropdownRef","setIsOpen","useState","handleClose","triggerComponent","onTrigger","isMenuOpen","ariaLabel","menu","keyCode","focusedElement","elementChildren","Array","from","indexOf","focus","toggleIsOpen","Menu","autoClose","shouldSkipTransition","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","useEffect","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","bubbleClassName","bubbleStyle","ariaLabelledBy","noCloseOnBackdrop","backdropExcludedSelector","noCompact","onMouseEnter","onMouseLeave","withPortal","backdropContainerRef","isTouchScreen","useAppLayout","useShowTransition","captureEscKeyListener","useHistoryBack","isActive","onBack","shouldBeReplaced","useEffectWithPrevDeps","prevIsOpen","dispatchHeavyAnimationEvent","useVirtualBackdrop","bubbleFullClassName","transformOriginYStyle","transformOriginXStyle","IS_BACKDROP_BLUR_SUPPORTED","Portal","props","isCharIcon","customIcon","href","download","destructive","withWrap","onContextMenu","clickArg","startsWith","window","location","origin","rel","dialogRef","isSlim","hasCloseButton","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","element","key","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","newFocusedIndex","shiftKey","addEventListener","removeEventListener","trapFocus","useLayoutEffectWithPrevDeps","body","classList","toggle","remove","containerId","elementRef","createElement","querySelector","add","appendChild","TeactDOM","removeChild","selectChatGroupCall","fullInfo","selectChatFullInfo","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectChat","isChatBasicGroup","isCreator","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCurrentLimit","limit","_limits$limit","appConfig","DEFAULT_LIMITS","isPremium","selectIsCurrentUserPremium","limits","selectPremiumLimit","callback","wrapperHandler","button","MouseButton","IS_TOUCH_ENV","getViewportSlice","sourceIds","listSlice","offsetId","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","listIds","isDisabled","requestParamsRef","viewportIdsRef","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","viewportIds","currentMiddleId","defaultOffsetId","areSortedArraysEqual","getMore","delay","noFirst","savedCallback","setInterval","clearInterval","onSelectWithEnter","noCaptureFocus","focusedIndex","setFocusedIndex","newIndex","item","cb","dependencies","debugKey","prevDepsRef","prevDeps","ignoreRightClick","excludedClosestSelector","handleEvent","contains","matches","closest","handler","captureKeyboardListener","keyToHandlerName","Enter","Backspace","Delete","Esc","Escape","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Tab","handlers","onDelete","onBackspace","onUp","onDown","onLeft","onRight","onTab","options","hasActiveHandlers","Object","keys","forEach","handlerName","currentEventHandlers","push","splice","releaseKeyboardListener","values","some","keyHandlers","i","counter","getIsDirectTextInputDisabled","overflow"],"sourceRoot":""}