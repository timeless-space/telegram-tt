{"version":3,"file":"3041.32acf7cb975c97edaf54.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/TrackingMonkey.tsx","webpack://telegram-t/./src/components/auth/AuthCode.tsx","webpack://telegram-t/./src/components/auth/AuthPassword.tsx","webpack://telegram-t/./src/components/auth/AuthRegister.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/stopEvent.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { useState, useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, useCallback, memo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport TrackingMonkey from '../common/TrackingMonkey';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authError'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authError,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthError,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authError, clearAuthError, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n          >\n            <i className=\"icon icon-edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {renderText(lang(authIsCodeViaApp ? 'SentAppCode' : 'Login.JustSentSms'), ['simple_markdown'])}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authError && lang(authError)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authError']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authError, authHint,\n}) => {\n  const { setAuthPassword, clearAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('Login.Header.Password')}</h1>\n        <p className=\"note\">{lang('Login.EnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useState, memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport AvatarEditable from '../ui/AvatarEditable';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authError,\n}) => {\n  const { signUp, clearAuthError, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authError, clearAuthError]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('Login.Register.Desc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('Login.Register.FirstName.Placeholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authError && lang(authError)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('Login.Register.LastName.Placeholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError']),\n)(AuthRegister));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  }, [onEnter]);\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n"],"names":["memo","_ref","code","codeLength","trackingDirection","isTracking","isBig","isFirstMonkeyLoaded","setIsFirstMonkeyLoaded","useState","isMobile","useAppLayout","trackningFramesPerSymbol","stickerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","useCallback","React","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","undefined","tgsUrl","LOCAL_TGS_URLS","play","onLoad","playSegment","startFrame","length","endFrame","getTrackingFrames","speed","noLoop","withGlobal","global","pick","authPhoneNumber","authIsCodeViaApp","authIsLoading","authError","setAuthCode","returnToAuthPhoneNumber","clearAuthError","getActions","lang","useLang","inputRef","useRef","setCode","setIsTracking","setTrackingDirection","useEffect","IS_TOUCH_ENV","current","focus","useHistoryBack","isActive","onBack","onCodeChange","e","currentTarget","target","value","replace","substr","TrackingMonkey","onClick","role","tabIndex","title","renderText","InputText","ref","label","onInput","error","autoComplete","inputMode","Loading","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","password","MonkeyPassword","isPasswordVisible","PasswordForm","clearError","hint","isLoading","onChangePasswordVisibility","onSubmit","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","event","handleLastNameChange","action","method","preventDefault","file","AvatarEditable","onChange","Button","type","ripple","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onInputChange","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","requestMutation","select","stopEvent","buildClassName","dir","isRtl","MIN_PASSWORD_LENGTH","maxLength","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","stikerSize","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","src","alt","CropModal","onClose","cropperResultOptions","quality","format","circle","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","Modal","isOpen","Boolean","hasCloseButton","round","color","ariaLabel","dialogRef","isSlim","header","noBackdrop","noBackdropClose","children","style","onCloseAnimationEnd","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","trapFocus","useLayoutEffectWithPrevDeps","_ref2","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","fullClassName","Portal","cb","dependencies","debugKey","prevDepsRef","useLayoutEffect","prevDeps","callback","delay","savedCallback","setTimeout","clearTimeout","counter","getIsDirectTextInputDisabled"],"sourceRoot":""}